{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/add-book/add-book.component.ts","./src/app/add-reader/add-reader.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/component/login-component/login.component.ts","./src/app/component/profile-component/profile.component.ts","./src/app/component/upvote-component/upvote.component.ts","./src/app/core/add-header.interceptors.ts","./src/app/core/badge.service.ts","./src/app/core/book-resolver.service.ts","./src/app/core/book-tracker-error-handler.service.ts","./src/app/core/cache.interceptor.ts","./src/app/core/data.service.ts","./src/app/core/http-cache.service.ts","./src/app/core/log-response.interceptors.ts","./src/app/dashboard/dashboard.component.ts","./src/app/data.ts","./src/app/edit-book/edit-book.component.ts","./src/app/edit-reader/edit-reader.component.ts","./src/app/models/bookTrackerError.ts","./src/app/service/auth.service.ts","./src/app/service/voter.service.ts","./src/environments/environment.ts","./src/main.ts","./src/app/app.component.css","data:text/css;charset=utf-8;base64,CiAgICAgICAgICAgIHNwYW57bWFyZ2luLWxlZnQ6MnB4fQogICAgICAgICAgICBpe2JvcmRlcjpibGFja30KICAgICAgICA=","data:text/css;charset=utf-8;base64,CiAgICAgICAgZW17ZmxvYXQ6cmlnaHQ7Y29sb3I6cmVkfQogICAgICAgIC5lcnJvcntiYWNrZ3JvdW5kOiNmZWNhY2F9CiAgICA=","data:text/css;charset=utf-8;base64,CiAgICAgICAgZW17ZmxvYXQ6cmlnaHQ7Y29sb3I6cmVkfQogICAgICAgICAgICA=","./src/app/add-book/add-book.component.html","./src/app/add-reader/add-reader.component.html","./src/app/app.component.html","./src/app/component/login-component/login.component.html","./src/app/component/profile-component/profile.component.html","./src/app/component/upvote-component/upvote.component.html","./src/app/dashboard/dashboard.component.html","./src/app/edit-book/edit-book.component.html","./src/app/edit-reader/edit-reader.component.html"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Book } from \"app/models/book\";\r\n\r\nimport { DataService } from '../core/data.service';\r\n\r\n@Component({\r\n  selector: 'app-add-book',\r\n  templateUrl: './add-book.component.html',\r\n  styles: []\r\n})\r\nexport class AddBookComponent implements OnInit {\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  saveBook(formValues: any): void {\r\n    let newBook: Book = <Book>formValues;\r\n    newBook.bookID = 0;\r\n    console.log(newBook);\r\n\r\n    this.dataService.addBook(newBook).subscribe(\r\n      (data: Book) => console.log(data),\r\n      (err: any) => console.log(err)\r\n    )\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Reader } from \"app/models/reader\";\r\n\r\n@Component({\r\n  selector: 'app-add-reader',\r\n  templateUrl: './add-reader.component.html',\r\n  styles: []\r\n})\r\nexport class AddReaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n  saveReader(formValues: any): void {\r\n    let newReader: Reader = <Reader>formValues;\r\n    newReader.readerID = 0;\r\n    console.log(newReader);\r\n    console.warn('Save new reader not yet implemented.');\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AddBookComponent } from \"app/add-book/add-book.component\";\r\nimport { AddReaderComponent } from \"app/add-reader/add-reader.component\";\r\nimport { DashboardComponent } from \"app/dashboard/dashboard.component\";\r\nimport { EditBookComponent } from \"app/edit-book/edit-book.component\";\r\nimport { EditReaderComponent } from \"app/edit-reader/edit-reader.component\";\r\nimport { BookResolverService } from './core/book-resolver.service';\r\n\r\nconst routes: Routes = [\r\n  { path: 'dashboard', component: DashboardComponent, resolve: {resolvedBooks : BookResolverService} },\r\n  { path: 'addbook', component: AddBookComponent },\r\n  { path: 'addreader', component: AddReaderComponent },\r\n  { path: 'editreader/:id', component: EditReaderComponent },\r\n  { path: 'editbook/:id', component: EditBookComponent },\r\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\nimport {AuthService} from './service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n\r\n  constructor(public authService : AuthService){}\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AddBookComponent } from './add-book/add-book.component';\r\nimport { AddReaderComponent } from './add-reader/add-reader.component';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { EditBookComponent } from './edit-book/edit-book.component';\r\nimport { EditReaderComponent } from './edit-reader/edit-reader.component';\r\nimport { BookTrackerErrorHandlerService } from './core/book-tracker-error-handler.service';\r\n\r\nimport { AddHeaderInterceptor } from './core/add-header.interceptors';\r\nimport { LogResponseInterceptor } from './core/log-response.interceptors';\r\nimport { CacheInterceptor } from './core/cache.interceptor';\r\nimport { LoginComponent } from './component/login-component/login.component';\r\nimport { AuthService } from './service/auth.service';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ProfileComponent } from './component/profile-component/profile.component';\r\nimport { UpvoteComponent } from './component/upvote-component/upvote.component';\r\nimport { VoterService } from './service/voter.service';\r\n\r\nconst route: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'profile', component: ProfileComponent }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    AddBookComponent,\r\n    EditReaderComponent,\r\n    EditBookComponent,\r\n    AddReaderComponent,\r\n    LoginComponent,\r\n    ProfileComponent,\r\n    UpvoteComponent\r\n  ],\r\n  providers: [\r\n    { provide: ErrorHandler, useClass: BookTrackerErrorHandlerService },\r\n    { provide: HTTP_INTERCEPTORS, useClass: AddHeaderInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: LogResponseInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: CacheInterceptor, multi: true },\r\n    AuthService,\r\n    VoterService\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forRoot(route)\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { LoginInterface } from \"app/interface\";\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthService } from \"../../service/auth.service\";\r\n\r\n@Component({\r\n    selector: \"app-login-component\",\r\n    templateUrl: \"./login.component.html\",\r\n    styles: [\r\n        `\r\n        em{float:right;color:red}\r\n            `\r\n    ]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    userName: string;\r\n    password: string;\r\n    mouseOverLogin:boolean;\r\n\r\n    constructor(private authService: AuthService, private router: Router) { }\r\n\r\n    ngOnInit(): void {\r\n        // throw new Error(\"Method not implemented.\");\r\n    }\r\n    login(value: LoginInterface) {\r\n        this.authService.login(value.userName, value.password);\r\n        this.router.navigate(['/dashboard'])\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from 'app/service/auth.service';\r\n\r\nimport { ProfileInterface } from '../../interface';\r\n\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: 'app-profile-component',\r\n    templateUrl: './profile.component.html',\r\n    styles: [`\r\n        em{float:right;color:red}\r\n        .error{background:#fecaca}\r\n    `]\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n    profileForm: FormGroup;\r\n    firstName: FormControl;\r\n    lastName: FormControl;\r\n    constructor(public authService: AuthService, private router: Router) { }\r\n\r\n    ngOnInit(): void {\r\n        this.firstName = new FormControl(this.authService.currentUser.firstName, [Validators.required,Validators.pattern('[a-zA-Z]*')]);\r\n        this.lastName = new FormControl(this.authService.currentUser.lastName, Validators.required);\r\n        this.profileForm = new FormGroup({\r\n            firstName: this.firstName,\r\n            lastName: this.lastName\r\n        });\r\n    }\r\n\r\n    isValidLastName() {\r\n        return this.lastName.valid || this.lastName.touched;\r\n    }\r\n\r\n    isValidFirstName() {\r\n        return this.firstName.valid || this.firstName.touched;\r\n    }\r\n\r\n    save(profile: ProfileInterface) {\r\n        if (this.profileForm.valid) {\r\n            this.authService.updateCurrentUser(profile);\r\n            this.router.navigate(['dashboard']);\r\n        }\r\n    }\r\n\r\n    cancel() {\r\n        this.router.navigate(['dashboard']);\r\n    }\r\n\r\n}","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { AuthService } from \"app/service/auth.service\";\r\nimport { of } from \"rxjs\";\r\n\r\n@Component({\r\n    selector: \"app-upvote\",\r\n    templateUrl: \"./upvote.component.html\",\r\n    styles: [\r\n        `\r\n            span{margin-left:2px}\r\n            i{border:black}\r\n        `\r\n    ]\r\n})\r\nexport class UpvoteComponent implements OnInit {\r\n    @Input() count: number;\r\n    @Input() set voted(val: boolean){\r\n        this.iconColor = val ? \"red\" : \"grey\";\r\n    };\r\n    @Output() vote = new EventEmitter();\r\n\r\n    user : boolean;\r\n    iconColor: string;\r\n\r\n    ngOnInit(): void {  \r\n        of(this.authService.isLoggedIn()).subscribe(\r\n            (data)=> \r\n                this.user = data\r\n        )\r\n    }\r\n\r\n    constructor(private authService: AuthService) {}\r\n\r\n    onClick() {\r\n        this.vote.emit({});\r\n    }\r\n\r\n}","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpContextToken } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nexport const CONTEXT_TYPE = new HttpContextToken(() => 'application/json');\r\n\r\n@Injectable()\r\nexport class AddHeaderInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        console.log(`AddHeaderInterceptor - ${req.url}`);\r\n\r\n        let jsonReq: HttpRequest<any> = req.clone({\r\n            setHeaders: {\r\n                'Content-Type': req.context.get(CONTEXT_TYPE)\r\n            }\r\n        });\r\n\r\n        return next.handle(jsonReq);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BadgeService {\r\n\r\n  constructor() { }\r\n\r\n  getReaderBadge(minutesRead: number): string {\r\n\r\n    if (minutesRead > 5000) {\r\n      return 'Book Worm';\r\n    }\r\n    else if (minutesRead > 2500) {\r\n      return 'Page Turner';\r\n    }\r\n    else {\r\n      return 'Getting Started';\r\n    }\r\n    \r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Book } from \"app/models/book\";\r\nimport { BookTrackerError } from \"app/models/bookTrackerError\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { DataService } from \"./data.service\";\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class BookResolverService implements Resolve<Book[] | BookTrackerError>{\r\n\r\n    constructor(private dataService: DataService) { }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Book[] | BookTrackerError | Observable<Book[] | BookTrackerError> | Promise<Book[] | BookTrackerError> {\r\n        return this.dataService.getAllBooks()\r\n            .pipe(\r\n                catchError(err => of(err))\r\n            )\r\n    }\r\n}","import { Injectable, ErrorHandler } from '@angular/core';\r\nimport { BookTrackerError } from 'app/models/bookTrackerError';\r\n\r\n@Injectable()\r\nexport class BookTrackerErrorHandlerService implements ErrorHandler {\r\n\r\n  handleError(error: any): void {\r\n    let customError: BookTrackerError = new BookTrackerError();\r\n    customError.errorNumber = 200;\r\n    customError.message = (<Error>error).message;\r\n    customError.friendlyMessage = 'An error occurred. Please try again.';\r\n\r\n    console.log(customError);\r\n  }\r\n\r\n  constructor() { }\r\n\r\n}\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse, HttpContextToken } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { tap } from \"rxjs/operators\";\r\nimport { HttpCacheService } from \"./http-cache.service\";\r\n\r\nexport const CACHABLE = new HttpContextToken(() => true);\r\n\r\n@Injectable()\r\nexport class CacheInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private cacheService: HttpCacheService) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        if(!req.context.get(CACHABLE)){\r\n            return next.handle(req);\r\n        }\r\n\r\n        if (req.method !== 'GET') {\r\n            console.log(`Invalidating cache ... ${req} - ${req.url}`);\r\n            this.cacheService.invalidateCache();\r\n            return next.handle(req);\r\n        }\r\n        let cachedData: HttpResponse<any> = this.cacheService.get(req.url);\r\n\r\n        if (cachedData) {\r\n            console.log(`Obtaining from the cache ${req} - ${req.url}`);\r\n            return of(cachedData);\r\n        }\r\n\r\n        return next.handle(req).pipe(\r\n            tap((event) => {\r\n                if (event instanceof HttpResponse) {\r\n                    console.log('Adding item to the cache');\r\n                    this.cacheService.put(req.url, event)\r\n                }\r\n            })\r\n        )\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpContext, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { from, Observable, pipe, throwError } from 'rxjs'\r\nimport { map, tap, catchError } from 'rxjs/operators';\r\n\r\nimport { allBooks, allReaders } from 'app/data';\r\nimport { Reader } from \"app/models/reader\";\r\nimport { Book } from \"app/models/book\";\r\nimport { BookTrackerError } from 'app/models/bookTrackerError';\r\n\r\nimport { OldBook } from '../models/oldBook';\r\nimport { CACHABLE } from './cache.interceptor';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  mostPopularBook: Book = allBooks[0];\r\n\r\n  setMostPopularBook(popularBook: Book): void {\r\n    this.mostPopularBook = popularBook;\r\n  }\r\n\r\n  getAllReaders(): Reader[] {\r\n    return allReaders;\r\n  }\r\n\r\n  getReaderById(id: number): Reader {\r\n    return allReaders.find(reader => reader.readerID === id);\r\n  }\r\n\r\n  getAllBooks(): Observable<Book[] | BookTrackerError> {\r\n    console.log(\"getting books\")\r\n    return this.http.get<Book[]>('/api/books',{\r\n      context : new HttpContext().set(CACHABLE,false)\r\n    }).\r\n    pipe(\r\n      catchError(err=>this.handleHttpError(err))\r\n    )\r\n    ;\r\n  }\r\n\r\n  handleHttpError(err :HttpErrorResponse):Observable<BookTrackerError>{\r\n    let tracker = new BookTrackerError();\r\n    tracker.errorNumber = 100;\r\n    tracker.friendlyMessage = 'An error occured while receiving the data',\r\n    tracker.message = err.message\r\n    \r\n    return throwError(tracker);\r\n  }\r\n\r\n  getBookById(id: number): Observable<Book> {\r\n    let getHeaders: HttpHeaders = new HttpHeaders({\r\n      'Accept': 'application/json',\r\n      'Authorization': 'my-token'\r\n    });\r\n\r\n    return this.http.get<Book>(`/api/books/${id}`, { headers: getHeaders })\r\n  }\r\n\r\n  getOldBooks(id: number): Observable<OldBook> {\r\n    return this.http.get<Book>(`/api/books/${id}`).pipe(\r\n      map((data) => <OldBook>{\r\n        bookTitle: data.title,\r\n        year: data.publicationYear\r\n      }\r\n      ),\r\n      tap((oldBook) => console.log(oldBook))\r\n    )\r\n  }\r\n\r\n  addBook(newBook: Book): Observable<Book> {\r\n    return this.http.post<Book>(`/api/books/`, newBook, {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    });\r\n  }\r\n\r\n  updateBook(updatedBook: Book): Observable<void> {\r\n    return this.http.put<void>(`/api/books/${updatedBook.bookID}`, updatedBook, {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    });\r\n  }\r\n\r\n  deleteBook(id: number): Observable<void> {\r\n    return this.http.delete<void>(`/api/books/${id}`)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\n\nimport { HttpResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpCacheService {\n\n  private requests: any = {};\n\n  constructor() { }\n\n  put(url: string, response: HttpResponse<any>): void {\n    this.requests[url] = response;\n  }\n\n  get(url: string): HttpResponse<any> | undefined {\n    return this.requests[url];\n  }\n\n  invalidateUrl(url: string): void {\n    this.requests[url] = undefined;\n  }\n\n  invalidateCache(): void {\n    this.requests = {}\n  }\n}\n","import { HttpEvent, HttpEventType, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { tap } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class LogResponseInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        console.log(`LogResponseInterceptor - ${req.url}`);\r\n\r\n        return next.handle(req).pipe(\r\n            tap((event) => {\r\n                if (event.type === HttpEventType.Response) {\r\n                    console.log(event.body);\r\n                }\r\n            })\r\n        );\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\nimport { Book } from \"app/models/book\";\r\nimport { Reader } from \"app/models/reader\";\r\nimport { DataService } from 'app/core/data.service';\r\nimport { BookTrackerError } from 'app/models/bookTrackerError';\r\n\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { VoterService } from 'app/service/voter.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styles: []\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  allBooks: Book[];\r\n  allReaders: Reader[];\r\n  mostPopularBook: Book;\r\n\r\n  constructor(private dataService: DataService,\r\n    private title: Title,\r\n    private voterService : VoterService,\r\n    private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n\r\n    let data: Book[] | BookTrackerError = this.route.snapshot.data['resolvedBooks'];\r\n    if (data instanceof BookTrackerError) {\r\n      console.log('error ' + data.message);\r\n    } else {\r\n      this.allBooks = data;\r\n    }\r\n\r\n    this.allReaders = this.dataService.getAllReaders();\r\n    this.mostPopularBook = this.dataService.mostPopularBook;\r\n\r\n    this.title.setTitle(`Book Tracker`);\r\n  }\r\n\r\n  deleteBook(bookID: number): void {\r\n    this.dataService.deleteBook(bookID).subscribe(\r\n      (data: void) => {\r\n        let index = this.allBooks.findIndex(book => book.bookID === bookID);\r\n        this.allBooks.splice(index, 1);\r\n      },\r\n      (err: any) => console.log(err)\r\n    )\r\n  }\r\n\r\n  deleteReader(readerID: number): void {\r\n    console.warn(`Delete reader not yet implemented (readerID: ${readerID}).`);\r\n  }\r\n\r\n  toggleVote(book: Book) {\r\n    this.voterService.modifyVoter(book);\r\n  }\r\n\r\n  hasVoted(book: Book) {\r\n    return this.voterService.checkVoter(book);\r\n  }\r\n}\r\n","import { Book } from \"app/models/book\";\r\nimport { Reader } from \"app/models/reader\";\r\n\r\nexport const allReaders: Reader[] = [\r\n    { readerID: 1, name: 'Marie', weeklyReadingGoal: 400, totalMinutesRead: 5600 },\r\n    { readerID: 2, name: 'Daniel', weeklyReadingGoal: 210, totalMinutesRead: 3000 },\r\n    { readerID: 3, name: 'Lanier', weeklyReadingGoal: 140, totalMinutesRead: 600 }\r\n  ];\r\n\r\nexport const allBooks: Book[] = [\r\n    { bookID: 1, title: 'Goodnight Moon', author: 'Margaret Wise Brown', publicationYear: 1953,voters:allReaders },\r\n    { bookID: 2, title: 'Winnie-the-Pooh', author: 'A. A. Milne', publicationYear: 1926,voters:[] },\r\n    { bookID: 3, title: 'Where the Wild Things Are', author: 'Maurice Sendak', publicationYear: 1963,voters:[] },\r\n    { bookID: 4, title: 'The Hobbit', author: 'J. R. R. Tolkien', publicationYear: 1937,voters:[] },\r\n    { bookID: 5, title: 'Curious George', author: 'H. A. Rey', publicationYear: 1941,voters:[] },\r\n    { bookID: 6, title: 'Alice\\'s Adventures in Wonderland', author: 'Lewis Carroll', publicationYear: 1865,voters:[] },\r\n];","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { Book } from 'app/models/book';\r\nimport { DataService } from 'app/core/data.service';\r\nimport { OldBook } from 'app/models/oldBook';\r\n\r\n@Component({\r\n  selector: 'app-edit-book',\r\n  templateUrl: './edit-book.component.html',\r\n  styles: []\r\n})\r\nexport class EditBookComponent implements OnInit {\r\n\r\n  selectedBook: Book;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private dataService: DataService) { }\r\n\r\n  ngOnInit() {\r\n    let bookID: number = parseInt(this.route.snapshot.params['id']);\r\n    this.dataService.getBookById(bookID)\r\n      .subscribe(\r\n        (data: Book) => this.selectedBook = data,\r\n        // (err: any) => console.log(err)\r\n      );\r\n    this.dataService.getOldBooks(bookID)\r\n      .subscribe(\r\n        ((data: OldBook) => console.log(data))\r\n      )\r\n  }\r\n\r\n  setMostPopular(): void {\r\n    this.dataService.setMostPopularBook(this.selectedBook);\r\n  }\r\n\r\n  saveChanges(): void {\r\n    this.dataService.updateBook(this.selectedBook).subscribe(\r\n      (data: void) => console.log(this.selectedBook.title),\r\n      (err: any) => console.log(err)\r\n    )\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { Reader } from \"app/models/reader\";\r\nimport { DataService } from 'app/core/data.service';\r\nimport { BadgeService } from 'app/core/badge.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-reader',\r\n  templateUrl: './edit-reader.component.html',\r\n  styles: [],\r\n  providers: [BadgeService]\r\n})\r\nexport class EditReaderComponent implements OnInit {\r\n\r\n  selectedReader: Reader;\r\n  currentBadge: string;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private dataService: DataService,\r\n              private badgeService: BadgeService) { }\r\n\r\n  ngOnInit() {\r\n    let readerID: number = parseInt(this.route.snapshot.params['id']);\r\n    this.selectedReader = this.dataService.getReaderById(readerID);\r\n    this.currentBadge = this.badgeService.getReaderBadge(this.selectedReader.totalMinutesRead);\r\n  }\r\n\r\n  saveChanges() {\r\n    console.warn('Save reader not yet implemented.');\r\n  }\r\n}\r\n","export class BookTrackerError {\r\n  errorNumber: number;\r\n  message: string;\r\n  friendlyMessage: string;\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { DataService } from \"app/core/data.service\";\r\nimport { Reader } from \"app/models/reader\";\r\n\r\nimport { ProfileInterface, UInterface } from \"../interface\";\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n    currentUser: UInterface;\r\n    reader: Reader;\r\n\r\n    constructor(private dataService: DataService) { }\r\n\r\n    login(userName: string, password: string) {\r\n        this.currentUser = {\r\n            userName: userName,\r\n            lastName: \"Riddle\",\r\n            firstName: \"Tom\",\r\n            id: 1\r\n        }\r\n\r\n        this.reader = this.dataService.getAllReaders().filter(reader => reader.name === this.currentUser.userName)[0];\r\n\r\n    }\r\n\r\n    isLoggedIn() {\r\n        return !!this.currentUser;\r\n    }\r\n\r\n    updateCurrentUser(profile: ProfileInterface) {\r\n        this.currentUser.lastName = profile.lastName;\r\n        this.currentUser.firstName = profile.firstName;\r\n    }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { DataService } from \"app/core/data.service\";\r\nimport { Book } from \"app/models/book\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable()\r\n\r\nexport class VoterService {\r\n\r\n    constructor(private authService: AuthService,\r\n        private datdaService: DataService) { }\r\n\r\n    modifyVoter(book: Book) {\r\n        if (this.checkVoter(book)) {\r\n            let index = book.voters.findIndex(voter => voter.readerID === this.authService.reader.readerID);\r\n            book.voters.splice(index, 1);\r\n        } else {\r\n            book.voters.push(this.authService.reader);\r\n            // this.datdaService.updateBook(book);\r\n        }\r\n    }\r\n\r\n    checkVoter(book: Book) {\r\n        let retrievedVoter = book.voters.filter(voter => this.authService.reader.readerID === voter.readerID);\r\n        if (retrievedVoter && retrievedVoter.length>0)\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n            span{margin-left:2px}\\n            i{border:black}\\n        \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNzcztjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBZ0lDQWdJQ0FnSUhOd1lXNTdiV0Z5WjJsdUxXeGxablE2TW5CNGZRb2dJQ0FnSUNBZ0lDQWdJQ0JwZTJKdmNtUmxjanBpYkdGamEzMEtJQ0FnSUNBZ0lDQT0iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtZQUNZLEtBQUssZUFBZTtZQUNwQixFQUFFLFlBQVkiLCJmaWxlIjoiY3NzO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0FnSUNBZ0lDQWdJSE53WVc1N2JXRnlaMmx1TFd4bFpuUTZNbkI0ZlFvZ0lDQWdJQ0FnSUNBZ0lDQnBlMkp2Y21SbGNqcGliR0ZqYTMwS0lDQWdJQ0FnSUNBPSIsInNvdXJjZXNDb250ZW50IjpbIlxuICAgICAgICAgICAgc3BhbnttYXJnaW4tbGVmdDoycHh9XG4gICAgICAgICAgICBpe2JvcmRlcjpibGFja31cbiAgICAgICAgIl19 */\";","export default \"\\n        em{float:right;color:red}\\n        .error{background:#fecaca}\\n    \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNzcztjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBZ0lDQWdaVzE3Wm14dllYUTZjbWxuYUhRN1kyOXNiM0k2Y21Wa2ZRb2dJQ0FnSUNBZ0lDNWxjbkp2Y250aVlXTnJaM0p2ZFc1a09pTm1aV05oWTJGOUNpQWdJQ0E9Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7UUFDUSxHQUFHLFdBQVcsQ0FBQyxTQUFTO1FBQ3hCLE9BQU8sa0JBQWtCIiwiZmlsZSI6ImNzcztjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBZ0lDQWdaVzE3Wm14dllYUTZjbWxuYUhRN1kyOXNiM0k2Y21Wa2ZRb2dJQ0FnSUNBZ0lDNWxjbkp2Y250aVlXTnJaM0p2ZFc1a09pTm1aV05oWTJGOUNpQWdJQ0E9Iiwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgICAgIGVte2Zsb2F0OnJpZ2h0O2NvbG9yOnJlZH1cbiAgICAgICAgLmVycm9ye2JhY2tncm91bmQ6I2ZlY2FjYX1cbiAgICAiXX0= */\";","export default \"\\n        em{float:right;color:red}\\n            \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNzcztjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBZ0lDQWdaVzE3Wm14dllYUTZjbWxuYUhRN1kyOXNiM0k2Y21Wa2ZRb2dJQ0FnSUNBZ0lDQWdJQ0E9Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7UUFDUSxHQUFHLFdBQVcsQ0FBQyxTQUFTIiwiZmlsZSI6ImNzcztjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBZ0lDQWdaVzE3Wm14dllYUTZjbWxuYUhRN1kyOXNiM0k2Y21Wa2ZRb2dJQ0FnSUNBZ0lDQWdJQ0E9Iiwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgICAgIGVte2Zsb2F0OnJpZ2h0O2NvbG9yOnJlZH1cbiAgICAgICAgICAgICJdfQ== */\";","export default \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form #addBookForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveBook(addBookForm.value)\\\" class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Add New Book</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTitle\\\" placeholder=\\\"Title\\\" name=\\\"title\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAuthor\\\" placeholder=\\\"Author\\\" name=\\\"author\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputYear\\\" placeholder=\\\"Year Published\\\" name=\\\"publicationYear\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\";","export default \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form #addReaderForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveReader(addReaderForm.value)\\\" class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Add Reader</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Name\\\" name=\\\"name\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Weekly Goal</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Weekly Goal\\\" name=\\\"weeklyReadingGoal\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Total Read</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTotal\\\" placeholder=\\\"Total Minutes Read\\\" name=\\\"totalMinutesRead\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\";","export default \"<nav class=\\\"navbar navbar-default\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <!-- Brand and toggle get grouped for better mobile display -->\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\"\\r\\n                data-target=\\\"#bs-example-navbar-collapse-1\\\">\\r\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n            </button>\\r\\n            <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/dashboard']\\\">Book Tracker</a>\\r\\n        </div>\\r\\n\\r\\n        <!-- Collect the nav links, forms, and other content for toggling -->\\r\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\r\\n            <ul class=\\\"nav navbar-nav\\\">\\r\\n                <li><a [routerLink]=\\\"['/addbook']\\\">Add Book<span class=\\\"sr-only\\\">(current)</span></a></li>\\r\\n                <li><a [routerLink]=\\\"['/addreader']\\\">Add Reader</a></li>\\r\\n\\r\\n                <li><div *ngIf=\\\"!authService.isLoggedIn()\\\"><a [routerLink]=\\\"['login']\\\">Login</a></div></li>\\r\\n                <li><div *ngIf=\\\"authService.isLoggedIn()\\\"><a [routerLink]=\\\"['profile']\\\">Welcome {{authService.currentUser.userName}}</a></div></li>\\r\\n                <!-- <li><div ><a [routerLink]=\\\"['profile']\\\">Profile</a></div></li> -->\\r\\n            </ul>\\r\\n        </div><!-- /.navbar-collapse -->\\r\\n    </div><!-- /.container-fluid -->\\r\\n</nav>\\r\\n\\r\\n<router-outlet></router-outlet>\";","export default \"<h1>Login</h1>\\r\\n<hr />\\r\\n<div class=\\\"col-md-4\\\">\\r\\n    <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login(loginForm.value)\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"userName\\\">User Name:</label>\\r\\n            <em *ngIf=\\\"(loginForm.controls.userName?.invalid && loginForm.controls.userName?.touched || mouseOverLogin)\\\">Required</em>\\r\\n            <input (ngModel)=\\\"userName\\\" id=\\\"userName\\\" name=\\\"userName\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                placeholder=\\\"User Name...\\\" required />\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"password\\\">Password:</label>\\r\\n            <em *ngIf=\\\"(loginForm.controls.password?.invalid && loginForm.controls.password?.touched || mouseOverLogin)\\\">Required</em>\\r\\n            <input (ngModel)=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\"\\r\\n                placeholder=\\\"Password...\\\" required />\\r\\n        </div>\\r\\n\\r\\n        <span (mouseover)=\\\"mouseOverLogin=true\\\" (mouseleave)=\\\"mouseOverLogin=false\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"loginForm.invalid\\\">Login</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" [routerLink]=\\\"['/dashboard']\\\">Cancel</button>\\r\\n        </span>\\r\\n    </form>\\r\\n</div>\";","export default \"<div>\\r\\n    <h1>Edit Your Profile </h1>\\r\\n    <hr>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <form autocomplete=\\\"off\\\" [formGroup]=\\\"profileForm\\\" novalidate (ngSubmit)=\\\"save(profileForm.value)\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"firstName\\\">First Name:</label>\\r\\n                <em *ngIf=\\\"!isValidFirstName() && profileForm.controls.firstName.errors.required\\\">Required</em>\\r\\n                <em *ngIf=\\\"!isValidFirstName() && profileForm.controls.firstName.errors.pattern\\\">Enter Appropriate Value</em>\\r\\n                <input id=\\\"firstName\\\" formControlName=\\\"firstName\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                    placeholder=\\\"First Name...\\\" [ngClass]=\\\"{'error' : !isValidFirstName()}\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"lastName\\\">Last Name:</label>\\r\\n                <input id=\\\"lastName\\\" formControlName=\\\"lastName\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                    placeholder=\\\"Last Name...\\\" [ngClass]=\\\"{'error' : !isValidLastName()}\\\" />\\r\\n            </div>\\r\\n\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\";","export default \"<span *ngIf=\\\"user\\\" (click) = \\\"onClick()\\\">\\r\\n    <!-- <span *ngIf=\\\"!voted\\\"><span class=\\\"glyphicon glyphicon-heart\\\"></span></span>\\r\\n    <span *ngIf=\\\"voted\\\">Unvote</span> -->\\r\\n    <i [style.color]=\\\"iconColor\\\" class=\\\"glyphicon glyphicon-heart\\\"></i>\\r\\n</span>\\r\\n<span>\\r\\n    {{count}}\\r\\n</span>\";","export default \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <h3 class=\\\"panel-title\\\">All Books</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n        <li *ngFor='let book of allBooks'>\\r\\n          <i>{{book.title}}</i>\\r\\n          <a [routerLink]=\\\"['/editbook', book.bookID]\\\"> Edit </a>\\r\\n          <a (click)=\\\"deleteBook(book.bookID)\\\">Delete</a>\\r\\n          <app-upvote (vote)=\\\"toggleVote(book)\\\" [voted]=\\\"hasVoted(book)\\\" [count]=\\\"book.voters.length\\\"></app-upvote>\\r\\n        </li>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <h3 class=\\\"panel-title\\\">All Readers</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n        <li *ngFor='let reader of allReaders'>\\r\\n          {{reader.name}}\\r\\n          <a [routerLink]=\\\"['/editreader', reader.readerID]\\\">Edit</a>\\r\\n          <a (click)=\\\"deleteReader(reader.readerID)\\\"> Delete </a>\\r\\n        </li>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <h3 class=\\\"panel-title\\\">Most Popular Book</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n          <i>{{mostPopularBook.title}}</i> by {{mostPopularBook.author}}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";","export default \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Edit Book</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTitle\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"selectedBook && selectedBook.title\\\" name=\\\"title\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAuthor\\\" placeholder=\\\"Author\\\" [(ngModel)]=\\\"selectedBook && selectedBook.author\\\" name=\\\"author\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputYear\\\" placeholder=\\\"Year Published\\\" [(ngModel)]=\\\"selectedBook && selectedBook.publicationYear\\\" name=\\\"publicationYear\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Save</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"setMostPopular()\\\">Set As Most Popular</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\";","export default \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Edit Reader</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"selectedReader && selectedReader.name\\\" name=\\\"name\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Weekly Goal</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Weekly Goal\\\" [(ngModel)]=\\\"selectedReader && selectedReader.weeklyReadingGoal\\\" name=\\\"weeklyReaddingGoal\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Total Read</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTotal\\\" placeholder=\\\"Total Minutes Read\\\" [(ngModel)]=\\\"selectedReader && selectedReader.totalMinutesRead\\\" name=\\\"totalMinutesRead\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Current Badge</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            {{ currentBadge }}\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Save</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\";"],"sourceRoot":"webpack:///"}